class Node:
    def __init__(self,data):
        self.data=data 
        self.next=None  

class LinkedList:
    def __init__(self):
        self.head=None  
    
    def printLL(self):
        tmp=self.head 
        while(tmp):
            print(tmp.data,end="->")
            tmp=tmp.next 
        print() 
        
    
        
    # def reverseLL(self):
    #     nxt=self.head.next 
    #     self.head.next=None 
    #     prev=self.head  
    #     while (nxt):
    #         cur=nxt 
    #         nxt=nxt.next 
    #         cur.next=prev 
    #         prev=cur
    #     self.head=prev
        
    def reverseLL(self):
        prev,curr=None,self.head 
        while (curr):
            nxt=curr.next 
            curr.next=prev 
            prev=curr 
            curr=nxt
        self.head=prev
    
    def reverseLL_rec(self):
        prev,curr=None,self.head 
        
        def rev(prev,curr):
            if curr:
                nxt=curr.next 
                curr.next=prev 
                prev=curr 
                curr=nxt 
                return rev(prev,curr)
            else:
                return prev 
        self.head=rev(prev,curr)
                
        
        
    
LL=LinkedList()       
LL.head=Node(1)
tmp=LL.head 
for i in range(2,8):
    tmp.next=Node(i)
    tmp=tmp.next
    
LL.printLL()

LL.reverseLL()
LL.printLL()

LL.reverseLL_rec()
LL.printLL()
